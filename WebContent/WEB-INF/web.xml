<?xml version="1.0" encoding="UTF-8"?>
<web-app>
	<!-- security-role: 웹 애플리케이션에 사용하는 역할을 나열하는 요소 -->
	<security-role>
		<!-- role-name: 역할 이름 -->
		<description></description>
		<role-name>admin</role-name>
	</security-role>
	<!-- security-constraint: 사용자의 요청 URL에 대한 접근 권한을 정의하는데 사용 -->
	<security-constraint>
		<!-- display-name: web.xml의 title을 설정, 보통 프로젝트명으로 설정 -->
		<display-name>WebMarket Security</display-name>
		<!-- web-resource-collection: 웹 자원에 대한 접근을 설정 -->
		<web-resource-collection>
			<!-- web-resource-name: 웹 자원의 이름을 설정하며 생략 가능 -->
			<!-- url-pattern: 접근 제한을 요청할 URL 목록을 설정, 자원에 대한 접근을 제한하지 않는 경우 생략 가능 -->
			<!-- http-method: http 메소드를 설정, GET or POST -->
			<web-resource-name>Picnic</web-resource-name>
			<description></description>
			<url-pattern>/addProduct.jsp</url-pattern>
			<url-pattern>/editProduct.jsp</url-pattern>
			<url-pattern>/reply_view.do</url-pattern>
			  
		</web-resource-collection>
		<!-- auth-constraint: 웹 자원에 접근할 수 있는 인증된 사용자를 설정 -->
		<auth-constraint>
			<!-- description: 권한 부여 제약 사항에 대한 설명을 기술 -->
			<!-- role-name: 권한이 부여된 사용자의 이름을 대문자와 소문자를 구분하여 설정 -->
			<!-- 반드시 tomcat-users.xml에 등록된 역할과 사용자만 가능, 모든 사용자에게 권한 부여시 *로 표시 -->
			<description>권한 관리자명</description>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>
		
	<!-- 예제 2번 -->
	<!-- login-config: 인증 처리를 위한 로그인 페이지나 오류 페이지를 호출하는데 사용 -->
	<login-config>
		<!-- auth-method: 웹 자원에 대한 인증 처리 방식을 설정 -->
		<auth-method>FORM</auth-method>
		<!-- form-login-config: 인증 처리를 위한 로그인 및 오류 페이지를 설정하는 요소 -->
		<form-login-config>
			<!-- form-login-page: 인증을 위한 로그인 페이지를 설정 -->
			<!-- form-error-page: 인증 실패시 표시할 오류 페이지를 설정 -->
			<form-login-page>/login.jsp</form-login-page>
			<form-error-page>/login_failed.jsp</form-error-page>
		</form-login-config>
	</login-config>
	
	<error-page>
		<error-code>404</error-code>
		<location>/exceptionNoPage.jsp</location>
	</error-page>
	
	<!-- <filter>
		<filter-name>LogFileFilter</filter-name>
		<filter-class>filter.LogFileFilter</filter-class>
		<init-param>
			<param-name>filename</param-name>
			<param-value>d:/logs/webmarket.log</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>LogFileFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	 
	<servlet>
		<servlet-name>FrontController</servlet-name>
		<servlet-class>frontcontroller.FrontController</servlet-class>
	</servlet>  
  
	<servlet-mapping>
		<servlet-name>FrontController</servlet-name>
		<url-pattern>*.do</url-pattern> 
	</servlet-mapping> 
</web-app>